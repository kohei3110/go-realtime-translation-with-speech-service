// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.4, generator: @autorest/go@4.0.0-preview.70)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// Code generated by @autorest/go. DO NOT EDIT.

package speechclient

// BlockKind - Type of data block.
type BlockKind string

const (
// BlockKindCommitted - A data block from the committed block list.
	BlockKindCommitted BlockKind = "Committed"
// BlockKindLatest - A data block from the uncommitted block list, if present, otherwise from the committed block list.
	BlockKindLatest BlockKind = "Latest"
// BlockKindUncommitted - A data block from the uncommitted block list.
	BlockKindUncommitted BlockKind = "Uncommitted"
)

// PossibleBlockKindValues returns the possible values for the BlockKind const type.
func PossibleBlockKindValues() []BlockKind {
	return []BlockKind{	
		BlockKindCommitted,
		BlockKindLatest,
		BlockKindUncommitted,
	}
}

// DatasetKind - Type of data import.
type DatasetKind string

const (
// DatasetKindAcoustic - An acoustic dataset.
	DatasetKindAcoustic DatasetKind = "Acoustic"
// DatasetKindAudioFiles - An audio files dataset.
	DatasetKindAudioFiles DatasetKind = "AudioFiles"
// DatasetKindLanguage - A language dataset.
	DatasetKindLanguage DatasetKind = "Language"
// DatasetKindLanguageMarkdown - A language markdown dataset.
	DatasetKindLanguageMarkdown DatasetKind = "LanguageMarkdown"
// DatasetKindOutputFormatting - Dataset that contains rules to customize inverse text normalization, capitalization, reformulation,
// profanity and also defines tests for dataset validation
	DatasetKindOutputFormatting DatasetKind = "OutputFormatting"
// DatasetKindPronunciation - A pronunciation dataset.
	DatasetKindPronunciation DatasetKind = "Pronunciation"
)

// PossibleDatasetKindValues returns the possible values for the DatasetKind const type.
func PossibleDatasetKindValues() []DatasetKind {
	return []DatasetKind{	
		DatasetKindAcoustic,
		DatasetKindAudioFiles,
		DatasetKindLanguage,
		DatasetKindLanguageMarkdown,
		DatasetKindOutputFormatting,
		DatasetKindPronunciation,
	}
}

// DetailedErrorCode - Detailed error code enum.
type DetailedErrorCode string

const (
// DetailedErrorCodeDataImportFailed - Data import failed.
	DetailedErrorCodeDataImportFailed DetailedErrorCode = "DataImportFailed"
// DetailedErrorCodeDeleteNotAllowed - Delete not allowed.
	DetailedErrorCodeDeleteNotAllowed DetailedErrorCode = "DeleteNotAllowed"
// DetailedErrorCodeDeployNotAllowed - Deploy not allowed.
	DetailedErrorCodeDeployNotAllowed DetailedErrorCode = "DeployNotAllowed"
// DetailedErrorCodeDeployingFailedModel - Deploying failed model.
	DetailedErrorCodeDeployingFailedModel DetailedErrorCode = "DeployingFailedModel"
// DetailedErrorCodeEmptyRequest - Empty Request.
	DetailedErrorCodeEmptyRequest DetailedErrorCode = "EmptyRequest"
// DetailedErrorCodeEndpointCannotBeDefault - Endpoint cannot be default.
	DetailedErrorCodeEndpointCannotBeDefault DetailedErrorCode = "EndpointCannotBeDefault"
// DetailedErrorCodeEndpointNotUpdatable - Endpoint not updatable.
	DetailedErrorCodeEndpointNotUpdatable DetailedErrorCode = "EndpointNotUpdatable"
// DetailedErrorCodeEndpointWithoutLogging - Endpoint without logging.
	DetailedErrorCodeEndpointWithoutLogging DetailedErrorCode = "EndpointWithoutLogging"
// DetailedErrorCodeExceededNumberOfRecordingsUris - Exceeded number of recordings uris.
	DetailedErrorCodeExceededNumberOfRecordingsUris DetailedErrorCode = "ExceededNumberOfRecordingsUris"
// DetailedErrorCodeFailedDataset - Failed dataset.
	DetailedErrorCodeFailedDataset DetailedErrorCode = "FailedDataset"
// DetailedErrorCodeForbidden - Forbidden.
	DetailedErrorCodeForbidden DetailedErrorCode = "Forbidden"
// DetailedErrorCodeInUseViolation - In use violation.
	DetailedErrorCodeInUseViolation DetailedErrorCode = "InUseViolation"
// DetailedErrorCodeInaccessibleCustomerStorage - Inaccessible customer storage.
	DetailedErrorCodeInaccessibleCustomerStorage DetailedErrorCode = "InaccessibleCustomerStorage"
// DetailedErrorCodeInvalidAdaptationMapping - Invalid adaptation mapping.
	DetailedErrorCodeInvalidAdaptationMapping DetailedErrorCode = "InvalidAdaptationMapping"
// DetailedErrorCodeInvalidBaseModel - Invalid base model.
	DetailedErrorCodeInvalidBaseModel DetailedErrorCode = "InvalidBaseModel"
// DetailedErrorCodeInvalidCallbackURI - Invalid callback uri.
	DetailedErrorCodeInvalidCallbackURI DetailedErrorCode = "InvalidCallbackUri"
// DetailedErrorCodeInvalidChannels - Invalid channels.
	DetailedErrorCodeInvalidChannels DetailedErrorCode = "InvalidChannels"
// DetailedErrorCodeInvalidCollection - Invalid collection.
	DetailedErrorCodeInvalidCollection DetailedErrorCode = "InvalidCollection"
// DetailedErrorCodeInvalidDataset - Invalid dataset.
	DetailedErrorCodeInvalidDataset DetailedErrorCode = "InvalidDataset"
// DetailedErrorCodeInvalidDocument - Invalid Document.
	DetailedErrorCodeInvalidDocument DetailedErrorCode = "InvalidDocument"
// DetailedErrorCodeInvalidDocumentBatch - Invalid Document Batch.
	DetailedErrorCodeInvalidDocumentBatch DetailedErrorCode = "InvalidDocumentBatch"
// DetailedErrorCodeInvalidLocale - Invalid locale.
	DetailedErrorCodeInvalidLocale DetailedErrorCode = "InvalidLocale"
// DetailedErrorCodeInvalidLogDate - Invalid log date.
	DetailedErrorCodeInvalidLogDate DetailedErrorCode = "InvalidLogDate"
// DetailedErrorCodeInvalidLogEndTime - Invalid log end time.
	DetailedErrorCodeInvalidLogEndTime DetailedErrorCode = "InvalidLogEndTime"
// DetailedErrorCodeInvalidLogID - Invalid log id.
	DetailedErrorCodeInvalidLogID DetailedErrorCode = "InvalidLogId"
// DetailedErrorCodeInvalidLogStartTime - Invalid log start time.
	DetailedErrorCodeInvalidLogStartTime DetailedErrorCode = "InvalidLogStartTime"
// DetailedErrorCodeInvalidModel - Invalid model.
	DetailedErrorCodeInvalidModel DetailedErrorCode = "InvalidModel"
// DetailedErrorCodeInvalidModelURI - Invalid model uri.
	DetailedErrorCodeInvalidModelURI DetailedErrorCode = "InvalidModelUri"
// DetailedErrorCodeInvalidParameter - Invalid parameter.
	DetailedErrorCodeInvalidParameter DetailedErrorCode = "InvalidParameter"
// DetailedErrorCodeInvalidParameterValue - Invalid parameter value.
	DetailedErrorCodeInvalidParameterValue DetailedErrorCode = "InvalidParameterValue"
// DetailedErrorCodeInvalidPayload - Invalid payload.
	DetailedErrorCodeInvalidPayload DetailedErrorCode = "InvalidPayload"
// DetailedErrorCodeInvalidPermissions - Invalid permissions.
	DetailedErrorCodeInvalidPermissions DetailedErrorCode = "InvalidPermissions"
// DetailedErrorCodeInvalidPrerequisite - Invalid prerequisite.
	DetailedErrorCodeInvalidPrerequisite DetailedErrorCode = "InvalidPrerequisite"
// DetailedErrorCodeInvalidProductID - Invalid product id.
	DetailedErrorCodeInvalidProductID DetailedErrorCode = "InvalidProductId"
// DetailedErrorCodeInvalidProject - Invalid project.
	DetailedErrorCodeInvalidProject DetailedErrorCode = "InvalidProject"
// DetailedErrorCodeInvalidProjectKind - Invalid project kind.
	DetailedErrorCodeInvalidProjectKind DetailedErrorCode = "InvalidProjectKind"
// DetailedErrorCodeInvalidRecordingsURI - Invalid recordings uri.
	DetailedErrorCodeInvalidRecordingsURI DetailedErrorCode = "InvalidRecordingsUri"
// DetailedErrorCodeInvalidRequestBodyFormat - Invalid request body format.
	DetailedErrorCodeInvalidRequestBodyFormat DetailedErrorCode = "InvalidRequestBodyFormat"
// DetailedErrorCodeInvalidSasValidityDuration - Invalid sas validity duration.
	DetailedErrorCodeInvalidSasValidityDuration DetailedErrorCode = "InvalidSasValidityDuration"
// DetailedErrorCodeInvalidSkipTokenForLogs - Invalid skip token for logs.
	DetailedErrorCodeInvalidSkipTokenForLogs DetailedErrorCode = "InvalidSkipTokenForLogs"
// DetailedErrorCodeInvalidSourceAzureResourceID - Invalid source Azure resource ID.
	DetailedErrorCodeInvalidSourceAzureResourceID DetailedErrorCode = "InvalidSourceAzureResourceId"
// DetailedErrorCodeInvalidSubscription - Invalid subscription.
	DetailedErrorCodeInvalidSubscription DetailedErrorCode = "InvalidSubscription"
// DetailedErrorCodeInvalidTest - Invalid test.
	DetailedErrorCodeInvalidTest DetailedErrorCode = "InvalidTest"
// DetailedErrorCodeInvalidTimeToLive - Invalid time to live.
	DetailedErrorCodeInvalidTimeToLive DetailedErrorCode = "InvalidTimeToLive"
// DetailedErrorCodeInvalidTopForLogs - Invalid top for logs.
	DetailedErrorCodeInvalidTopForLogs DetailedErrorCode = "InvalidTopForLogs"
// DetailedErrorCodeInvalidTranscription - Invalid transcription.
	DetailedErrorCodeInvalidTranscription DetailedErrorCode = "InvalidTranscription"
// DetailedErrorCodeInvalidWebHookEventKind - Invalid web hook event kind.
	DetailedErrorCodeInvalidWebHookEventKind DetailedErrorCode = "InvalidWebHookEventKind"
// DetailedErrorCodeMissingInputRecords - Missing Input Records.
	DetailedErrorCodeMissingInputRecords DetailedErrorCode = "MissingInputRecords"
// DetailedErrorCodeModelCopyAuthorizationExpired - Expired ModelCopyAuthorization.
	DetailedErrorCodeModelCopyAuthorizationExpired DetailedErrorCode = "ModelCopyAuthorizationExpired"
// DetailedErrorCodeModelDeploymentNotCompleteState - Model deployment not complete state.
	DetailedErrorCodeModelDeploymentNotCompleteState DetailedErrorCode = "ModelDeploymentNotCompleteState"
// DetailedErrorCodeModelDeprecated - Model deprecated.
	DetailedErrorCodeModelDeprecated DetailedErrorCode = "ModelDeprecated"
// DetailedErrorCodeModelExists - Model exists.
	DetailedErrorCodeModelExists DetailedErrorCode = "ModelExists"
// DetailedErrorCodeModelMismatch - Model mismatch.
	DetailedErrorCodeModelMismatch DetailedErrorCode = "ModelMismatch"
// DetailedErrorCodeModelNotDeployable - Model not deployable.
	DetailedErrorCodeModelNotDeployable DetailedErrorCode = "ModelNotDeployable"
// DetailedErrorCodeModelVersionIncorrect - Model Version Incorrect.
	DetailedErrorCodeModelVersionIncorrect DetailedErrorCode = "ModelVersionIncorrect"
// DetailedErrorCodeNoUTF8WithBom - No utf8 with bom.
	DetailedErrorCodeNoUTF8WithBom DetailedErrorCode = "NoUtf8WithBom"
// DetailedErrorCodeOnlyOneOfUrlsOrContainerOrDataset - Only one of urls or container or dataset.
	DetailedErrorCodeOnlyOneOfUrlsOrContainerOrDataset DetailedErrorCode = "OnlyOneOfUrlsOrContainerOrDataset"
// DetailedErrorCodeProjectGenderMismatch - Project gender mismatch.
	DetailedErrorCodeProjectGenderMismatch DetailedErrorCode = "ProjectGenderMismatch"
// DetailedErrorCodeQuotaViolation - Quota violation.
	DetailedErrorCodeQuotaViolation DetailedErrorCode = "QuotaViolation"
// DetailedErrorCodeSKULimitsExist - Sku limits exist.
	DetailedErrorCodeSKULimitsExist DetailedErrorCode = "SkuLimitsExist"
// DetailedErrorCodeSingleDefaultEndpoint - Single default endpoint.
	DetailedErrorCodeSingleDefaultEndpoint DetailedErrorCode = "SingleDefaultEndpoint"
// DetailedErrorCodeSubscriptionNotFound - Subscription not found.
	DetailedErrorCodeSubscriptionNotFound DetailedErrorCode = "SubscriptionNotFound"
// DetailedErrorCodeUnexpectedError - Unexpected error.
	DetailedErrorCodeUnexpectedError DetailedErrorCode = "UnexpectedError"
// DetailedErrorCodeUnsupportedClassBasedAdaptation - Unsupported class based adaptation.
	DetailedErrorCodeUnsupportedClassBasedAdaptation DetailedErrorCode = "UnsupportedClassBasedAdaptation"
// DetailedErrorCodeUnsupportedDelta - Unsupported delta.
	DetailedErrorCodeUnsupportedDelta DetailedErrorCode = "UnsupportedDelta"
// DetailedErrorCodeUnsupportedDynamicConfiguration - Unsupported dynamic configuration.
	DetailedErrorCodeUnsupportedDynamicConfiguration DetailedErrorCode = "UnsupportedDynamicConfiguration"
// DetailedErrorCodeUnsupportedFilter - Unsupported filter.
	DetailedErrorCodeUnsupportedFilter DetailedErrorCode = "UnsupportedFilter"
// DetailedErrorCodeUnsupportedLanguageCode - Unsupported language code.
	DetailedErrorCodeUnsupportedLanguageCode DetailedErrorCode = "UnsupportedLanguageCode"
// DetailedErrorCodeUnsupportedOrderBy - Unsupported order by.
	DetailedErrorCodeUnsupportedOrderBy DetailedErrorCode = "UnsupportedOrderBy"
// DetailedErrorCodeUnsupportedPagination - Unsupported pagination.
	DetailedErrorCodeUnsupportedPagination DetailedErrorCode = "UnsupportedPagination"
// DetailedErrorCodeUnsupportedTimeRange - Unsupported time range.
	DetailedErrorCodeUnsupportedTimeRange DetailedErrorCode = "UnsupportedTimeRange"
)

// PossibleDetailedErrorCodeValues returns the possible values for the DetailedErrorCode const type.
func PossibleDetailedErrorCodeValues() []DetailedErrorCode {
	return []DetailedErrorCode{	
		DetailedErrorCodeDataImportFailed,
		DetailedErrorCodeDeleteNotAllowed,
		DetailedErrorCodeDeployNotAllowed,
		DetailedErrorCodeDeployingFailedModel,
		DetailedErrorCodeEmptyRequest,
		DetailedErrorCodeEndpointCannotBeDefault,
		DetailedErrorCodeEndpointNotUpdatable,
		DetailedErrorCodeEndpointWithoutLogging,
		DetailedErrorCodeExceededNumberOfRecordingsUris,
		DetailedErrorCodeFailedDataset,
		DetailedErrorCodeForbidden,
		DetailedErrorCodeInUseViolation,
		DetailedErrorCodeInaccessibleCustomerStorage,
		DetailedErrorCodeInvalidAdaptationMapping,
		DetailedErrorCodeInvalidBaseModel,
		DetailedErrorCodeInvalidCallbackURI,
		DetailedErrorCodeInvalidChannels,
		DetailedErrorCodeInvalidCollection,
		DetailedErrorCodeInvalidDataset,
		DetailedErrorCodeInvalidDocument,
		DetailedErrorCodeInvalidDocumentBatch,
		DetailedErrorCodeInvalidLocale,
		DetailedErrorCodeInvalidLogDate,
		DetailedErrorCodeInvalidLogEndTime,
		DetailedErrorCodeInvalidLogID,
		DetailedErrorCodeInvalidLogStartTime,
		DetailedErrorCodeInvalidModel,
		DetailedErrorCodeInvalidModelURI,
		DetailedErrorCodeInvalidParameter,
		DetailedErrorCodeInvalidParameterValue,
		DetailedErrorCodeInvalidPayload,
		DetailedErrorCodeInvalidPermissions,
		DetailedErrorCodeInvalidPrerequisite,
		DetailedErrorCodeInvalidProductID,
		DetailedErrorCodeInvalidProject,
		DetailedErrorCodeInvalidProjectKind,
		DetailedErrorCodeInvalidRecordingsURI,
		DetailedErrorCodeInvalidRequestBodyFormat,
		DetailedErrorCodeInvalidSasValidityDuration,
		DetailedErrorCodeInvalidSkipTokenForLogs,
		DetailedErrorCodeInvalidSourceAzureResourceID,
		DetailedErrorCodeInvalidSubscription,
		DetailedErrorCodeInvalidTest,
		DetailedErrorCodeInvalidTimeToLive,
		DetailedErrorCodeInvalidTopForLogs,
		DetailedErrorCodeInvalidTranscription,
		DetailedErrorCodeInvalidWebHookEventKind,
		DetailedErrorCodeMissingInputRecords,
		DetailedErrorCodeModelCopyAuthorizationExpired,
		DetailedErrorCodeModelDeploymentNotCompleteState,
		DetailedErrorCodeModelDeprecated,
		DetailedErrorCodeModelExists,
		DetailedErrorCodeModelMismatch,
		DetailedErrorCodeModelNotDeployable,
		DetailedErrorCodeModelVersionIncorrect,
		DetailedErrorCodeNoUTF8WithBom,
		DetailedErrorCodeOnlyOneOfUrlsOrContainerOrDataset,
		DetailedErrorCodeProjectGenderMismatch,
		DetailedErrorCodeQuotaViolation,
		DetailedErrorCodeSKULimitsExist,
		DetailedErrorCodeSingleDefaultEndpoint,
		DetailedErrorCodeSubscriptionNotFound,
		DetailedErrorCodeUnexpectedError,
		DetailedErrorCodeUnsupportedClassBasedAdaptation,
		DetailedErrorCodeUnsupportedDelta,
		DetailedErrorCodeUnsupportedDynamicConfiguration,
		DetailedErrorCodeUnsupportedFilter,
		DetailedErrorCodeUnsupportedLanguageCode,
		DetailedErrorCodeUnsupportedOrderBy,
		DetailedErrorCodeUnsupportedPagination,
		DetailedErrorCodeUnsupportedTimeRange,
	}
}

// ErrorCode - High level error codes.
type ErrorCode string

const (
// ErrorCodeConflict - Representing the conflict error code.
	ErrorCodeConflict ErrorCode = "Conflict"
// ErrorCodeForbidden - Representing the forbidden error code.
	ErrorCodeForbidden ErrorCode = "Forbidden"
// ErrorCodeInternalCommunicationFailed - Representing the internal communication failed error code.
	ErrorCodeInternalCommunicationFailed ErrorCode = "InternalCommunicationFailed"
// ErrorCodeInternalServerError - Representing the internal server error error code.
	ErrorCodeInternalServerError ErrorCode = "InternalServerError"
// ErrorCodeInvalidArgument - Representing the invalid argument error code.
	ErrorCodeInvalidArgument ErrorCode = "InvalidArgument"
// ErrorCodeInvalidRequest - Representing the invalid request error code.
	ErrorCodeInvalidRequest ErrorCode = "InvalidRequest"
// ErrorCodeNotAllowed - Representing the not allowed error code.
	ErrorCodeNotAllowed ErrorCode = "NotAllowed"
// ErrorCodeNotFound - Representing the not found error code.
	ErrorCodeNotFound ErrorCode = "NotFound"
// ErrorCodePipelineError - Representing the pipeline error error code.
	ErrorCodePipelineError ErrorCode = "PipelineError"
// ErrorCodeServiceUnavailable - Representing the service unavailable error code.
	ErrorCodeServiceUnavailable ErrorCode = "ServiceUnavailable"
// ErrorCodeTooManyRequests - Representing the too many requests error code.
	ErrorCodeTooManyRequests ErrorCode = "TooManyRequests"
// ErrorCodeUnauthorized - Representing the unauthorized error code.
	ErrorCodeUnauthorized ErrorCode = "Unauthorized"
// ErrorCodeUnprocessableEntity - Representing the unprocessable entity error code.
	ErrorCodeUnprocessableEntity ErrorCode = "UnprocessableEntity"
// ErrorCodeUnsupportedMediaType - Representing the unsupported media type error code.
	ErrorCodeUnsupportedMediaType ErrorCode = "UnsupportedMediaType"
)

// PossibleErrorCodeValues returns the possible values for the ErrorCode const type.
func PossibleErrorCodeValues() []ErrorCode {
	return []ErrorCode{	
		ErrorCodeConflict,
		ErrorCodeForbidden,
		ErrorCodeInternalCommunicationFailed,
		ErrorCodeInternalServerError,
		ErrorCodeInvalidArgument,
		ErrorCodeInvalidRequest,
		ErrorCodeNotAllowed,
		ErrorCodeNotFound,
		ErrorCodePipelineError,
		ErrorCodeServiceUnavailable,
		ErrorCodeTooManyRequests,
		ErrorCodeUnauthorized,
		ErrorCodeUnprocessableEntity,
		ErrorCodeUnsupportedMediaType,
	}
}

// FileKind - Type of data.
type FileKind string

const (
// FileKindAcousticDataArchive - Type of data is acoustic data archive.
	FileKindAcousticDataArchive FileKind = "AcousticDataArchive"
// FileKindAcousticDataTranscriptionV2 - Type of data is acoustic data transcription v2.
	FileKindAcousticDataTranscriptionV2 FileKind = "AcousticDataTranscriptionV2"
// FileKindAudio - Type of data is audio.
	FileKindAudio FileKind = "Audio"
// FileKindDatasetReport - Type of data is dataset report.
	FileKindDatasetReport FileKind = "DatasetReport"
// FileKindEvaluationDetails - Type of data is evaluation details.
	FileKindEvaluationDetails FileKind = "EvaluationDetails"
// FileKindLanguageData - Type of data is language data.
	FileKindLanguageData FileKind = "LanguageData"
// FileKindModelReport - Type of data is model report.
	FileKindModelReport FileKind = "ModelReport"
// FileKindOutputFormattingData - Type of data is output formatting input file.
	FileKindOutputFormattingData FileKind = "OutputFormattingData"
// FileKindPronunciationData - Type of data is pronunciation data.
	FileKindPronunciationData FileKind = "PronunciationData"
// FileKindTranscription - Type of data is transcription.
	FileKindTranscription FileKind = "Transcription"
// FileKindTranscriptionReport - Type of data is transcription report.
	FileKindTranscriptionReport FileKind = "TranscriptionReport"
)

// PossibleFileKindValues returns the possible values for the FileKind const type.
func PossibleFileKindValues() []FileKind {
	return []FileKind{	
		FileKindAcousticDataArchive,
		FileKindAcousticDataTranscriptionV2,
		FileKindAudio,
		FileKindDatasetReport,
		FileKindEvaluationDetails,
		FileKindLanguageData,
		FileKindModelReport,
		FileKindOutputFormattingData,
		FileKindPronunciationData,
		FileKindTranscription,
		FileKindTranscriptionReport,
	}
}

// LanguageIdentificationMode - The mode used for language identification.
type LanguageIdentificationMode string

const (
// LanguageIdentificationModeContinuous - Continuous language identification (Default).
	LanguageIdentificationModeContinuous LanguageIdentificationMode = "Continuous"
// LanguageIdentificationModeSingle - Single language identification.
	LanguageIdentificationModeSingle LanguageIdentificationMode = "Single"
)

// PossibleLanguageIdentificationModeValues returns the possible values for the LanguageIdentificationMode const type.
func PossibleLanguageIdentificationModeValues() []LanguageIdentificationMode {
	return []LanguageIdentificationMode{	
		LanguageIdentificationModeContinuous,
		LanguageIdentificationModeSingle,
	}
}

// OutputFormatType - OutputFormatType
type OutputFormatType string

const (
// OutputFormatTypeDisplay - Model supports display formatting transcriptions output or endpoints.
	OutputFormatTypeDisplay OutputFormatType = "Display"
// OutputFormatTypeLexical - Model provides the transcription output without formatting.
	OutputFormatTypeLexical OutputFormatType = "Lexical"
)

// PossibleOutputFormatTypeValues returns the possible values for the OutputFormatType const type.
func PossibleOutputFormatTypeValues() []OutputFormatType {
	return []OutputFormatType{	
		OutputFormatTypeDisplay,
		OutputFormatTypeLexical,
	}
}

// ProfanityFilterMode - Mode of profanity filtering.
type ProfanityFilterMode string

const (
// ProfanityFilterModeMasked - Mask the profanity with * except of the first letter, e.g., f***
	ProfanityFilterModeMasked ProfanityFilterMode = "Masked"
// ProfanityFilterModeNone - Disable profanity filtering.
	ProfanityFilterModeNone ProfanityFilterMode = "None"
// ProfanityFilterModeRemoved - Remove profanity.
	ProfanityFilterModeRemoved ProfanityFilterMode = "Removed"
// ProfanityFilterModeTags - Add "profanity" XML tags&lt;/Profanity&gt;
	ProfanityFilterModeTags ProfanityFilterMode = "Tags"
)

// PossibleProfanityFilterModeValues returns the possible values for the ProfanityFilterMode const type.
func PossibleProfanityFilterModeValues() []ProfanityFilterMode {
	return []ProfanityFilterMode{	
		ProfanityFilterModeMasked,
		ProfanityFilterModeNone,
		ProfanityFilterModeRemoved,
		ProfanityFilterModeTags,
	}
}

// PunctuationMode - The mode used for punctuation.
type PunctuationMode string

const (
// PunctuationModeAutomatic - Automatic punctuation.
	PunctuationModeAutomatic PunctuationMode = "Automatic"
// PunctuationModeDictated - Dictated punctuation marks only, i.e., explicit punctuation.
	PunctuationModeDictated PunctuationMode = "Dictated"
// PunctuationModeDictatedAndAutomatic - Dictated punctuation marks or automatic punctuation.
	PunctuationModeDictatedAndAutomatic PunctuationMode = "DictatedAndAutomatic"
// PunctuationModeNone - No punctuation.
	PunctuationModeNone PunctuationMode = "None"
)

// PossiblePunctuationModeValues returns the possible values for the PunctuationMode const type.
func PossiblePunctuationModeValues() []PunctuationMode {
	return []PunctuationMode{	
		PunctuationModeAutomatic,
		PunctuationModeDictated,
		PunctuationModeDictatedAndAutomatic,
		PunctuationModeNone,
	}
}

// Status - Describe the current state of the API.
type Status string

const (
// StatusFailed - The long running operation has failed.
	StatusFailed Status = "Failed"
// StatusNotStarted - The long running operation has not yet started.
	StatusNotStarted Status = "NotStarted"
// StatusRunning - The long running operation is currently processing.
	StatusRunning Status = "Running"
// StatusSucceeded - The long running operation has successfully completed.
	StatusSucceeded Status = "Succeeded"
)

// PossibleStatusValues returns the possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{	
		StatusFailed,
		StatusNotStarted,
		StatusRunning,
		StatusSucceeded,
	}
}

// TextNormalizationKind - The kind of text normalization.
type TextNormalizationKind string

const (
// TextNormalizationKindDefault - Default text normalization (e.g. '2 to 3' is replaced by 'two to three' in en-US).
	TextNormalizationKindDefault TextNormalizationKind = "Default"
// TextNormalizationKindNone - No text normalization will be applied to the input text. This is an override option that should
// only be used when text is normalized before the upload.
	TextNormalizationKindNone TextNormalizationKind = "None"
)

// PossibleTextNormalizationKindValues returns the possible values for the TextNormalizationKind const type.
func PossibleTextNormalizationKindValues() []TextNormalizationKind {
	return []TextNormalizationKind{	
		TextNormalizationKindDefault,
		TextNormalizationKindNone,
	}
}

