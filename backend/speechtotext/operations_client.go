// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.4, generator: @autorest/go@4.0.0-preview.70)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// Code generated by @autorest/go. DO NOT EDIT.

package speechclient

import (
	"context"
	"errors"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
	"net/url"
	"strconv"
	"strings"
)

// OperationsClient contains the methods for the Operations group.
// Don't use this type directly, use a constructor function instead.
type OperationsClient struct {
	internal *azcore.Client
	endpoint string
}

// GetModelCopy - Gets the operation identified by the given ID.
// If the operation fails it returns an *azcore.ResponseError type.
//
// Generated from API version 3.2
//   - id - The identifier of the operation.
//   - options - OperationsClientGetModelCopyOptions contains the optional parameters for the OperationsClient.GetModelCopy method.
func (client *OperationsClient) GetModelCopy(ctx context.Context, id string, options *OperationsClientGetModelCopyOptions) (OperationsClientGetModelCopyResponse, error) {
	var err error
	req, err := client.getModelCopyCreateRequest(ctx, id, options)
	if err != nil {
		return OperationsClientGetModelCopyResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return OperationsClientGetModelCopyResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return OperationsClientGetModelCopyResponse{}, err
	}
	resp, err := client.getModelCopyHandleResponse(httpResp)
	return resp, err
}

// getModelCopyCreateRequest creates the GetModelCopy request.
func (client *OperationsClient) getModelCopyCreateRequest(ctx context.Context, id string, _ *OperationsClientGetModelCopyOptions) (*policy.Request, error) {
	host := "{endpoint}/speechtotext/v3.2"
	host = strings.ReplaceAll(host, "{endpoint}", client.endpoint)
	urlPath := "/operations/models/copy/{id}"
	if id == "" {
		return nil, errors.New("parameter id cannot be empty")
	}
	urlPath = strings.ReplaceAll(urlPath, "{id}", url.PathEscape(id))
	req, err := runtime.NewRequest(ctx, http.MethodGet, runtime.JoinPaths(host, urlPath))
	if err != nil {
		return nil, err
	}
	req.Raw().Header["Accept"] = []string{"application/json"}
	return req, nil
}

// getModelCopyHandleResponse handles the GetModelCopy response.
func (client *OperationsClient) getModelCopyHandleResponse(resp *http.Response) (OperationsClientGetModelCopyResponse, error) {
	result := OperationsClientGetModelCopyResponse{}
	if val := resp.Header.Get("Retry-After"); val != "" {
		retryAfter32, err := strconv.ParseInt(val, 10, 32)
		retryAfter := int32(retryAfter32)
		if err != nil {
			return OperationsClientGetModelCopyResponse{}, err
		}
		result.RetryAfter = &retryAfter
	}
	if err := runtime.UnmarshalAsJSON(resp, &result.Operation); err != nil {
		return OperationsClientGetModelCopyResponse{}, err
	}
	return result, nil
}

